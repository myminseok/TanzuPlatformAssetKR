apiVersion: v1
data:
  delivery.yml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: tanzu-java-web-app
      annotations:
        kapp.k14s.io/update-strategy: fallback-on-replace
        ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
        kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
      labels:
        app.kubernetes.io/part-of: tanzu-java-web-app
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: custom-server
        app.kubernetes.io/component: run
        carto.run/workload-name: tanzu-java-web-app
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/component: run
          app.kubernetes.io/part-of: tanzu-java-web-app
          apps.tanzu.vmware.com/auto-configure-actuators: "false"
          apps.tanzu.vmware.com/has-tests: "true"
          apps.tanzu.vmware.com/workload-type: custom-server
          carto.run/workload-name: tanzu-java-web-app
          conventions.carto.run/framework: spring-boot
          tanzu.app.live.view: "true"
          tanzu.app.live.view.application.actuator.path: actuator
          tanzu.app.live.view.application.actuator.port: "8080"
          tanzu.app.live.view.application.flavours: spring-boot
          tanzu.app.live.view.application.name: tanzu-java-web-app
      template:
        metadata:
          annotations:
            apps.tanzu.vmware.com/correlationid: https://github.com/myminseok/tanzu-java-web-app?sub_path=/
            boot.spring.io/version: 2.5.8
            conventions.carto.run/applied-conventions: |-
              spring-boot-convention/auto-configure-actuators-check
              spring-boot-convention/is-native-app-check
              spring-boot-convention/spring-boot
              spring-boot-convention/spring-boot-graceful-shutdown
              spring-boot-convention/spring-boot-web
              spring-boot-convention/spring-boot-actuator
              spring-boot-convention/app-live-view-appflavour-check
              spring-boot-convention/app-live-view-connector-boot
              spring-boot-convention/app-live-view-appflavours-boot
            developer.conventions/target-containers: workload
          labels:
            app.kubernetes.io/component: run
            app.kubernetes.io/part-of: tanzu-java-web-app
            apps.tanzu.vmware.com/auto-configure-actuators: "false"
            apps.tanzu.vmware.com/has-tests: "true"
            apps.tanzu.vmware.com/workload-type: custom-server
            carto.run/workload-name: tanzu-java-web-app
            conventions.carto.run/framework: spring-boot
            tanzu.app.live.view: "true"
            tanzu.app.live.view.application.actuator.path: actuator
            tanzu.app.live.view.application.actuator.port: "8080"
            tanzu.app.live.view.application.flavours: spring-boot
            tanzu.app.live.view.application.name: tanzu-java-web-app
        spec:
          containers:
          - env:
            - name: JAVA_TOOL_OPTIONS
              value: -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
            image: ghcr.io/myminseok/tap-service/minseok-supply-chain/tanzu-java-web-app-my-space@sha256:ed87549c0d32e869fe3e5e0e3fa1a985fdc8a7332fda02e0a9b46855fb603150
            name: workload
            ports:
            - containerPort: 8080
              protocol: TCP
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
          serviceAccountName: default
      replicas: 2
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: tanzu-java-web-app
      labels:
        app.kubernetes.io/part-of: tanzu-java-web-app
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: custom-server
        app.kubernetes.io/component: run
        carto.run/workload-name: tanzu-java-web-app
    spec:
      selector:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: tanzu-java-web-app
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: custom-server
        carto.run/workload-name: tanzu-java-web-app
        conventions.carto.run/framework: spring-boot
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: tanzu-java-web-app
      ports:
      - targetPort: 8080
        port: 8080
        name: http
kind: ConfigMap
metadata:
  creationTimestamp: "2024-06-25T07:52:09Z"
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: tanzu-java-web-app
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: custom-server
    carto.run/cluster-template-name: ""
    carto.run/resource-name: app-config
    carto.run/supply-chain-name: source-test-to-url
    carto.run/template-kind: ClusterConfigTemplate
    carto.run/template-lifecycle: mutable
    carto.run/workload-name: tanzu-java-web-app
    carto.run/workload-namespace: my-space
  name: tanzu-java-web-app-custom-server
  namespace: my-space
  ownerReferences:
  - apiVersion: carto.run/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Workload
    name: tanzu-java-web-app
    uid: 46091daa-c365-4467-9270-f033dbedd430
  resourceVersion: "618453"
  uid: 375af596-d7ee-4471-ab4b-559cf7b8a872
