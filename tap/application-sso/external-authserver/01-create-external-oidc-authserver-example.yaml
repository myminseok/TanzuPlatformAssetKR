
apiVersion: sso.apps.tanzu.vmware.com/v1alpha1
kind: AuthServer
metadata:
  name: dev-authserver
  namespace: default
  labels:
    name: dev-authserver
    env: development 
  annotations:
    sso.apps.tanzu.vmware.com/allow-client-namespaces: "default"
    sso.apps.tanzu.vmware.com/allow-unsafe-issuer-uri: ""
    sso.apps.tanzu.vmware.com/allow-unsafe-identity-provider: ""
spec:
  replicas: 1
  tls:
    disabled: true
  identityProviders:
    - name: keycloak
      openID:
        # REQUIRED
        # The issuer identifier. If the provider supports OpenID Connect Discovery,
        # this value will be used to auto-configure the provider, by obtaining information
        # at https://issuer-uri/.well-known/openid-configuration
        issuerURI: https://keycloak.lab.pksdemo.net:8443/realms/master
        # Obtained when registering a client with the provider, often through a web UI
        clientID: tapapp
        # Obtained when registering a client with the provider, often through a web UI
        clientSecretRef:
          name: dev-openid-client-secret
        # The URI for performing an authorization request and obtaining an authorization_code
        authorizationUri: https://keycloak.lab.pksdemo.net:8443/realms/master/protocol/openid-connect/auth
        # The URI for performing a token request, and obtaining a token
        tokenUri: https://keycloak.lab.pksdemo.net:8443/realms/master/protocol/openid-connect/token
        # The JWKS endpoint for obtaining the JSON Web Keys, used to verify token signatures
        jwksUri: https://keycloak.lab.pksdemo.net:8443/realms/master/protocol/openid-connect/certs
        # Scopes used in the authorization request
        # MUST contain "openid". Other common OpenID values are "profile", "email".
        scopes:
          - "openid"
          - "email"
        # OPTIONAL
        claimMappings:
          # The "my-oidc-provider-groups" claim from the ID token issued by "my-oidc-provider"
          # will be mapped into the "roles" claim in tokens issued by AppSSO
          #roles: my-oidc-provider-groups
  tokenSignature:
    signAndVerifyKeyRef:
      name: "authserver-signing-key"
---
apiVersion: v1
kind: Secret
metadata:
  name: dev-openid-client-secret
stringData:
  clientSecret: Kxxxxxxx
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: RSAKey
metadata:
  name: authserver-signing-key
  namespace: default
spec:
  secretTemplate:
    type: Opaque
    stringData:
      key.pem: $(privateKey)
      pub.pem: $(publicKey)
