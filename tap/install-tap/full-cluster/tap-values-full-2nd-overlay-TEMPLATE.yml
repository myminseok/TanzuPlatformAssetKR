#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.all
---

#@overlay/match missing_ok=True
profile: full # Can take iterate, build, run, view.

#@overlay/match missing_ok=True
supply_chain: testing_scanning # Can take testing, testing_scanning.

#@overlay/match missing_ok=True
ootb_supply_chain_testing: # Optional if the corresponding shared keys are provided.
  registry:
    server: "BUILDSERVICE_REGISTRY_HOSTNAME"
    repository: "SUPPLYCHAIN_REPO"
  # gitops:
  #   ssh_secret: "" # (Optional) Defaults to "".
  gitops:
    server_address: https://github.com/ ## This must include the scheme/protocol (e.g. https:// or ssh://)
    #server_address: ssh://git@github.com/
    repository_owner: SUPPLYCHAIN_GITOPS_REPOSITORY_OWNER
    username: SUPPLYCHAIN_GITOPS_REPOSITORY_OWNER
    repository_name: SUPPLYCHAIN_GITOPS_REPOSITORY_NAME
    #branch: main
    ssh_secret: gitops-basic
    commit_strategy: direct #direct,pull_request
  cluster_builder: default
  service_account: default

#@overlay/match missing_ok=True
ootb_supply_chain_testing_scanning: # Optional if the corresponding shared keys are provided.
  registry:
    server: "BUILDSERVICE_REGISTRY_HOSTNAME"
    repository: "SUPPLYCHAIN_REPO"
  ## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.3/tap/GUID-scc-gitops-vs-regops.html
  # gitops:
  #   ssh_secret: "" # (Optional) Defaults to "".
  gitops:
    server_address: https://github.com/ ## This must include the scheme/protocol (e.g. https:// or ssh://)
    #server_address: ssh://git@github.com/
    repository_owner: SUPPLYCHAIN_GITOPS_REPOSITORY_OWNER
    username: SUPPLYCHAIN_GITOPS_REPOSITORY_OWNER
    repository_name: tap-gitops-repo
    #branch: main
    ssh_secret: gitops-basic
    commit_strategy: pull_request
    pull_request:
      server_kind: github
      commit_branch: ""
      pull_request_title: ready for review
      pull_request_body: generated by supply chain
    #git_implementation: libgit2

#@overlay/match missing_ok=True
tap_gui:
  #@overlay/match missing_ok=True
  tls:
    namespace: tap-gui
    secretName: tap-gui-cert
  service_type: ClusterIP # If the shared.ingress_domain is set as above, this must be set to ClusterIP
  app_config:
    customize:
      custom_name: "Developer Portal"
    organization:
      name: "DevOps Team"
    #@overlay/match missing_ok=True
    proxy:
      /metadata-store:
        target: https://metadata-store-app.metadata-store:8443/api/v1
        changeOrigin: true
        secure: false
        #@overlay/match missing_ok=True
        headers:
          ## IMPORTANT: Authorization is required even if full cluster.
          ## TOKEN: kubectl get secrets metadata-store-read-write-client -n metadata-store -o jsonpath="{.data.token}" | base64 -d
          ##  https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.0/tap/GUID-scst-store-create_service_account_access_token.html
          Authorization: "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6InYyUUVpaFA3alk0TDNBalZERkNCNlFTbHhsM1A3SHhxZmxnWVpkT1EweVUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtZXRhZGF0YS1zdG9yZSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJtZXRhZGF0YS1zdG9yZS1yZWFkLXdyaXRlLWNsaWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJtZXRhZGF0YS1zdG9yZS1yZWFkLXdyaXRlLWNsaWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImQ5OTU0YjBhLThkYTktNGMzMS04NmVmLWM5OGYwZjk2YWNiZSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptZXRhZGF0YS1zdG9yZTptZXRhZGF0YS1zdG9yZS1yZWFkLXdyaXRlLWNsaWVudCJ9.gti4z3bkMuDhqZ3Qp2TGHqyIyhVo8G72Ujg2rtN6VQ9js5gtIlW-HOsU5UN3Dzje9hMUDbW6I0v1cBxlELYGQ9Og276NZLulKOFOmD39L-AQQeI9HnolnSujEClnsG1jv8GxmJ-kvDs4L9EQaaXZJOqrY__AsXBIphoUC423CYyFAR58ZKA4qxqkVFeweubgtVe4EAkcOzMCE6CH-cI9FTLevgluHpwGQajB1lZCfvU-YL1Ob3KTuKa9EYtqIT50Bq8mL-W2EtLFfcRDssAGMQxUYZJMhWfDlTG92P1hVUVnowNZsGv7Sih52wn1eALQo-4gvfyxMDlGgIKH7l0IBw"
          X-Custom-Source: project-star
    # ##github working
    # auth:
    #   environment: development
    #   providers:
    #     github:
    #       development:
    #         clientId: 
    #         clientSecret: 

#@overlay/match missing_ok=True
cnrs:
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
  #@overlay/match missing_ok=True
  default_tls_secret: tanzu-system-ingress/cnrs-default-tls


## if grype is installed on DEVELOPER_NAMESPACE from tap-values.yml, 
## then expected behavior is that the developer namespace provisioner doesn't do anything regarding grype installation for developer namespace.
## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.3/tap/GUID-cli-plugins-insight-cli-configuration.html
## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.3/tap/GUID-scst-scan-upgrading.html
## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.3/tap/GUID-scst-scan-install-scst-scan.html#install-grype
## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.3/tap/GUID-scst-store-multicluster-setup.html
#@overlay/match missing_ok=True
grype:
  namespace: "DEVELOPER_NAMESPACE"
  targetImagePullSecret: "registry-credentials"
  ## additional custom CAs. inherits from shared.ca_cert_data by default.
  # ca_cert_data: |
  #   -----BEGIN CERTIFICATE-----
  #   MIIDzTCCArWgAwIBAgIUNch6P5frstAn/3+sywH8wGaIo30wDQYJKoZIhvcNAQEL
  #   -----END CERTIFICATE-----
  
#@overlay/match missing_ok=True
api_auto_registration:
  tap_gui_url: https://tap-gui.TAP_DOMAIN
  cluster_name: full-cluster
  ##  CA for tap-gui.TAP_DOMAIN
  ##  kubectl get secret -n tap-gui tap-gui-cert -o yaml -ojsonpath='{.data.ca\.crt}' | base64 -d
  ##  CA for app workload domain
  ##  kubectl get secret -n tanzu-system-ingress cnrs-ca -o yaml -ojsonpath='{.data.ca\.crt}' | base64 -d
  ca_cert_data: |
    -----BEGIN CERTIFICATE-----
    MIIC3zCCAcegAwIBAgIQfh3AvZ2SyfO0xP304IDx+TANBgkqhkiG9w0BAQsFADAA
    MB4XDTIyMTExNzA3MDEzMFoXDTIzMDIxNTA3MDEzMFowADCCASIwDQYJKoZIhvcN
    AQEBBQADggEPADCCAQoCggEBALqyeK/jAUA0Dng5aO5mzBqL2kFQ/QDVnwPEyaPH
    bS64zL9A1vhw/1rpWt4CWolKmpk3tlUvAJdZqLF9ORfss6kcNVeWI79keo2z3NQR
    XluKbKK1prdl7kdU9HzrTmbqono9ZL19V3vaU5uoA4ohzJkTGw+S9Sx2SaAmj26D
    EAxhNNao5AZYh1rNfm7ISiVexJ6fm0bgAPacNlIL35Kc+b7HdQz+5lRs2aQutQxI
    N04mSUCmE0VncYBoL5TgLwSvowWqs6FfGmeWMpSE2XLpw5aY5N3+i+Pb9TNxLZmP
    8uHN1WqBxLZq/UsOZg4DAv/xPxyyilvTDZYQhexS192aGW8CAwEAAaNVMFMwDgYD
    VR0PAQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwMwYDVR0RAQH/BCkwJ4IldGFwLWd1
    aS50YXAuaDJvLTItMjI1Ny5oMm8udm13YXJlLmNvbTANBgkqhkiG9w0BAQsFAAOC
    AQEAebnc/9CW9C0nvq/3d4g+LHC/CzMJwfKLbWe9+5dz94ExHbgvHIwUld90ubtK
    BZGGzvDmtvEAyOXInriolBZf+dB3hZt01kNwqcLQnj7l3uX5fo6N2Zoj54ji3gzn
    BSw9KvWgz5Z/f9EYKqGB8iIbBHDJK8TfVrCh9DyNClaXiflC/tLwyukAkkg8QueL
    sppt63i+GWE52AYqvo2Cp/0UyWjx7Ye+mnl2bmOAsXE8p0ret/ZbjaQUukRw/BLk
    SkEPRW3DueTtf1t7fSrvRD8XZXYEqBHWG8YLy+XGo/RwZ7VDuYR1vPMBJW01osuZ
    /MmaGiovLNNMZTqf0cLsjA8G8w==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIC8DCCAdigAwIBAgIQWrbHntyH/uac36W1AUKYsDANBgkqhkiG9w0BAQsFADAS
    MRAwDgYDVQQDEwdjbnJzLWNhMB4XDTIyMTExNzA0MjYxNloXDTIzMDIxNTA0MjYx
    NlowEjEQMA4GA1UEAxMHY25ycy1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
    AQoCggEBAMf6es2/VGBcYy+7WF6fTBCzrB8hbHjTAfpq5/ee9n6qZrJmRw92YTeV
    hsmCKy9QZDMsrSbjwiVkewP5rlc2sT7TiYHBukjYk1LQVScLpgGV1UmZiG6IOsRr
    uqV3YdFl2ZKzNybWAE3QZTuwm3xPWa3aj9YHZVPzj7ebq5x86kfGF4KyTyLqrVh2
    QDVbBhJ/TfXwTePdcvIfNes9maKQgfRr38+YHJHP4TdZzrdPgyTeUwueLTXE4VbT
    wCeIM11WsLSin+phIyAS+ox2tKe9QyXsDqyK3TTL0+KcWRyhVLgttYLhJDCn1alz
    JgtVpRJmXdWIG7UTJyGSaGy61mPwHRcCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgKk
    MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFBiGfQKCYq4a6AA0HKXdF66Y1ziS
    MA0GCSqGSIb3DQEBCwUAA4IBAQBM8IVq8WH8MTnVuxfSDg6NNY6GCLqx5yvOUq66
    A66cKdiiQAnbD8RXvFqTlVAuwnjoLCJvwLJdTdx3pR1gBJgLRxDpBqYSon27Oww3
    RYmhvGjB1ZnumZpzjHvItoVyZFboP3eZdFk6SxvgOIh0unO3NFYRhZper5zfnYam
    qhhpiV4hz5PjbHpC/Ev2+86Q6MozwEHcBdTt6bSCA+7yMtSetWbdP0YHt7Ipg535
    h3BJCyYk/IIFmY0aEf9pcVQwJo2RYObUQziElByS75igz6YBQrX0HiiLz8bzfq9X
    VGR2RiY3r5gljy0dYMyInnrkiOjReQ/fBbyNIi07Q//LTErR
    -----END CERTIFICATE-----

#@overlay/match missing_ok=True
api_portal:
  apiPortalServer:
    title: "API portal"
    description: "Description"
    # imagePullPolicy: IfNotPresent
    # registryCredentialsSecret: api-portal-image-pull-secret
    replicaCount: 1
    sourceUrls: "https://petstore.swagger.io/v2/swagger.json,https://petstore3.swagger.io/api/v3/openapi.json,http://myweb.lab.pksdemo.net:8080/openapi.json,http://myweb.lab.pksdemo.net:9090/v3/api-docs"
    sourceUrlsCacheTtlSec: "10"
    sourceUrlsTimeoutSec: "10"
    requestMemory: "512Mi"
    requestCpu: "100m"
    limitMemory: "1024Mi"
    limitCpu: "500m"
    namespace: "api-portal"
    trustInsecureSourceUrls: true
    caCertData: ""

  sso:
    enabled: false
    # secretName: sso-credentials

#@overlay/match missing_ok=True
package_overlays:
- name: cnrs
  secrets:
  - name: cnrs-default-tls
  # ## for pvc support on knative.
  # - name: "knative-serving-overlay"

### TODO: commenting out this on TAP 1.5, because overlaying to scantemplate broke scan job validation webhook. 
### kubectl describe SourceScans tanzu-java-web-app -n demo-app => The scan job could not be created. admission webhook "validation.webhook.pipeline.tekton.dev" denied the request: validation failed: expected exactly one, got neither: 
# - name: "grype"
#   secrets:
#   - name: "scanning-ca-overlay"

# - name: ootb-templates
#   secrets:
#   ## for pvc support on knative.
#   - name: "ootb-templates-overlay"

## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.5/tap/install-offline-application-accelerator-configuration.html
## https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.5/tap/application-accelerator-install-app-acc.html
#@overlay/match missing_ok=True
accelerator:
  server:
    service_type: "ClusterIP"
    watched_namespace: "accelerator-system"
    engine_skip_tls_verify: true
  samples:
    include: true
  sources:
    skip_tls_verify: true

# # https://github.com/x95castle1/custom-cartographer-supply-chain-examples/tree/main/github-pr
# ootb_templates:
#   excluded_templates:
#   - 'tekton-taskrun'

#@overlay/match missing_ok=True
#@overlay/replace
excluded_packages:
- policy.apps.tanzu.vmware.com # workaround for policy controller error
- api-portal.tanzu.vmware.com
- learningcenter.tanzu.vmware.com
- workshops.learningcenter.tanzu.vmware.com
- tap-telemetry.tanzu.vmware.com
- sso.apps.tanzu.vmware.com



#@overlay/match missing_ok=True
namespace_provisioner:
  controller: true
  overlay_secrets:
  - name: namespace-provisioner-overlay-add-secrets-to-sa
    namespace: tap-install
    create_export: true