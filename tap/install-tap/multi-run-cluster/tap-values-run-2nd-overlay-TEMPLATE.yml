#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.all
---
#@overlay/match missing_ok=True
profile: run # Can take iterate, build, run, view.


## https-overlay/apply-cnrs-default-tls-run-cluster.sh
#@overlay/match missing_ok=True
cnrs:
  domain_template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
  default_tls_secret: tanzu-system-ingress/cnrs-default-tls
  ingress:
    external:
      namespace: tanzu-system-ingress
  # allow_manual_configmap_update: false  # for package_overlay to take effect. if you don't want to allow modifying configmaps manually (i.e. editing configmaps with kubectl edit)


#@overlay/match missing_ok=True
api_auto_registration:
  tap_gui_url: https://tap-gui.TAP_DOMAIN
  cluster_name: run-cluster
  ##  - CA for app workload domain from RUN cluster"
  ##    kubectl get secret -n tanzu-system-ingress cnrs-ca -o yaml -ojsonpath='{.data.ca\.crt}' | base64 -d"
  ## - CA for TAP GUI domain from VIEW cluster"
  ##    kubectl get secret -n tap-gui tap-gui-cert -o yaml -ojsonpath='{.data.ca\.crt}' | base64 -d"
  #ca_cert_data: |
  ##  -----BEGIN CERTIFICATE-----
    

#@overlay/match missing_ok=True
namespace_provisioner:
  controller: true
  default_parameters:
    supply_chain_service_account:
      secrets:
      - gitops-basic
      - gitops-ssh
  # overlay_secrets:
  # - name: namespace-provisioner-overlay-add-secrets-to-sa
  #   namespace: tap-install
  #   create_export: true

#@overlay/match missing_ok=True
package_overlays:
- name: cnrs
  secrets:
  - name: cnrs-default-tls-overlay
  # ## for pvc support on knative.
  # - name: "knative-serving-overlay"
  # - name: cnrs-cm-overlay